{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownDirectiveMessage(directiveName) {\n  return \"Unknown directive \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" may not be used on \").concat(location, \".\");\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(name), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(name, candidateLocation), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n\n        break;\n\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n\n      case Kind.VARIABLE_DEFINITION:\n        return DirectiveLocation.VARIABLE_DEFINITION;\n\n      case Kind.SCHEMA_DEFINITION:\n      case Kind.SCHEMA_EXTENSION:\n        return DirectiveLocation.SCHEMA;\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n\n      case Kind.INPUT_VALUE_DEFINITION:\n        {\n          var parentNode = ancestors[ancestors.length - 3];\n          return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n        }\n    }\n  }\n}","map":{"version":3,"names":["GraphQLError","Kind","DirectiveLocation","specifiedDirectives","unknownDirectiveMessage","directiveName","concat","misplacedDirectiveMessage","location","KnownDirectives","context","locationsMap","Object","create","schema","getSchema","definedDirectives","getDirectives","_i2","length","directive","name","locations","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","value","map","Directive","node","key","parent","path","ancestors","reportError","candidateLocation","getDirectiveLocationForASTPath","indexOf","appliedTo","Array","isArray","OPERATION_DEFINITION","operation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE_DEFINITION","SCHEMA_DEFINITION","SCHEMA_EXTENSION","SCHEMA","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","SCALAR","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","OBJECT","FIELD_DEFINITION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","INTERFACE","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","UNION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","ENUM","ENUM_VALUE_DEFINITION","ENUM_VALUE","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","INPUT_OBJECT","INPUT_VALUE_DEFINITION","parentNode","INPUT_FIELD_DEFINITION","ARGUMENT_DEFINITION"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/validation/rules/KnownDirectives.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownDirectiveMessage(directiveName) {\n  return \"Unknown directive \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" may not be used on \").concat(location, \".\");\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(name), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(name, candidateLocation), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n\n        break;\n\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n\n      case Kind.VARIABLE_DEFINITION:\n        return DirectiveLocation.VARIABLE_DEFINITION;\n\n      case Kind.SCHEMA_DEFINITION:\n      case Kind.SCHEMA_EXTENSION:\n        return DirectiveLocation.SCHEMA;\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n\n      case Kind.INPUT_VALUE_DEFINITION:\n        {\n          var parentNode = ancestors[ancestors.length - 3];\n          return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n        }\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAO,SAASC,uBAAT,CAAiCC,aAAjC,EAAgD;EACrD,OAAO,uBAAuBC,MAAvB,CAA8BD,aAA9B,EAA6C,KAA7C,CAAP;AACD;AACD,OAAO,SAASE,yBAAT,CAAmCF,aAAnC,EAAkDG,QAAlD,EAA4D;EACjE,OAAO,eAAeF,MAAf,CAAsBD,aAAtB,EAAqC,wBAArC,EAA+DC,MAA/D,CAAsEE,QAAtE,EAAgF,GAAhF,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;EACvC,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAnB;EACA,IAAIC,MAAM,GAAGJ,OAAO,CAACK,SAAR,EAAb;EACA,IAAIC,iBAAiB,GAAGF,MAAM,GAAGA,MAAM,CAACG,aAAP,EAAH,GAA4Bd,mBAA1D;;EAEA,KAAK,IAAIe,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGF,iBAAiB,CAACG,MAA1C,EAAkDD,GAAG,EAArD,EAAyD;IACvD,IAAIE,SAAS,GAAGJ,iBAAiB,CAACE,GAAD,CAAjC;IACAP,YAAY,CAACS,SAAS,CAACC,IAAX,CAAZ,GAA+BD,SAAS,CAACE,SAAzC;EACD;;EAED,IAAIC,cAAc,GAAGb,OAAO,CAACc,WAAR,GAAsBC,WAA3C;;EAEA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,cAAc,CAACJ,MAAvC,EAA+CO,GAAG,EAAlD,EAAsD;IACpD,IAAIC,GAAG,GAAGJ,cAAc,CAACG,GAAD,CAAxB;;IAEA,IAAIC,GAAG,CAACC,IAAJ,KAAa3B,IAAI,CAAC4B,oBAAtB,EAA4C;MAC1ClB,YAAY,CAACgB,GAAG,CAACN,IAAJ,CAASS,KAAV,CAAZ,GAA+BH,GAAG,CAACL,SAAJ,CAAcS,GAAd,CAAkB,UAAUV,IAAV,EAAgB;QAC/D,OAAOA,IAAI,CAACS,KAAZ;MACD,CAF8B,CAA/B;IAGD;EACF;;EAED,OAAO;IACLE,SAAS,EAAE,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,SAA5C,EAAuD;MAChE,IAAIhB,IAAI,GAAGY,IAAI,CAACZ,IAAL,CAAUS,KAArB;MACA,IAAIR,SAAS,GAAGX,YAAY,CAACU,IAAD,CAA5B;;MAEA,IAAI,CAACC,SAAL,EAAgB;QACdZ,OAAO,CAAC4B,WAAR,CAAoB,IAAItC,YAAJ,CAAiBI,uBAAuB,CAACiB,IAAD,CAAxC,EAAgDY,IAAhD,CAApB;QACA;MACD;;MAED,IAAIM,iBAAiB,GAAGC,8BAA8B,CAACH,SAAD,CAAtD;;MAEA,IAAIE,iBAAiB,IAAIjB,SAAS,CAACmB,OAAV,CAAkBF,iBAAlB,MAAyC,CAAC,CAAnE,EAAsE;QACpE7B,OAAO,CAAC4B,WAAR,CAAoB,IAAItC,YAAJ,CAAiBO,yBAAyB,CAACc,IAAD,EAAOkB,iBAAP,CAA1C,EAAqEN,IAArE,CAApB;MACD;IACF;EAfI,CAAP;AAiBD;;AAED,SAASO,8BAAT,CAAwCH,SAAxC,EAAmD;EACjD,IAAIK,SAAS,GAAGL,SAAS,CAACA,SAAS,CAAClB,MAAV,GAAmB,CAApB,CAAzB;;EAEA,IAAI,CAACwB,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAL,EAA+B;IAC7B,QAAQA,SAAS,CAACd,IAAlB;MACE,KAAK3B,IAAI,CAAC4C,oBAAV;QACE,QAAQH,SAAS,CAACI,SAAlB;UACE,KAAK,OAAL;YACE,OAAO5C,iBAAiB,CAAC6C,KAAzB;;UAEF,KAAK,UAAL;YACE,OAAO7C,iBAAiB,CAAC8C,QAAzB;;UAEF,KAAK,cAAL;YACE,OAAO9C,iBAAiB,CAAC+C,YAAzB;QARJ;;QAWA;;MAEF,KAAKhD,IAAI,CAACiD,KAAV;QACE,OAAOhD,iBAAiB,CAACgD,KAAzB;;MAEF,KAAKjD,IAAI,CAACkD,eAAV;QACE,OAAOjD,iBAAiB,CAACiD,eAAzB;;MAEF,KAAKlD,IAAI,CAACmD,eAAV;QACE,OAAOlD,iBAAiB,CAACkD,eAAzB;;MAEF,KAAKnD,IAAI,CAACoD,mBAAV;QACE,OAAOnD,iBAAiB,CAACmD,mBAAzB;;MAEF,KAAKpD,IAAI,CAACqD,mBAAV;QACE,OAAOpD,iBAAiB,CAACoD,mBAAzB;;MAEF,KAAKrD,IAAI,CAACsD,iBAAV;MACA,KAAKtD,IAAI,CAACuD,gBAAV;QACE,OAAOtD,iBAAiB,CAACuD,MAAzB;;MAEF,KAAKxD,IAAI,CAACyD,sBAAV;MACA,KAAKzD,IAAI,CAAC0D,qBAAV;QACE,OAAOzD,iBAAiB,CAAC0D,MAAzB;;MAEF,KAAK3D,IAAI,CAAC4D,sBAAV;MACA,KAAK5D,IAAI,CAAC6D,qBAAV;QACE,OAAO5D,iBAAiB,CAAC6D,MAAzB;;MAEF,KAAK9D,IAAI,CAAC+D,gBAAV;QACE,OAAO9D,iBAAiB,CAAC8D,gBAAzB;;MAEF,KAAK/D,IAAI,CAACgE,yBAAV;MACA,KAAKhE,IAAI,CAACiE,wBAAV;QACE,OAAOhE,iBAAiB,CAACiE,SAAzB;;MAEF,KAAKlE,IAAI,CAACmE,qBAAV;MACA,KAAKnE,IAAI,CAACoE,oBAAV;QACE,OAAOnE,iBAAiB,CAACoE,KAAzB;;MAEF,KAAKrE,IAAI,CAACsE,oBAAV;MACA,KAAKtE,IAAI,CAACuE,mBAAV;QACE,OAAOtE,iBAAiB,CAACuE,IAAzB;;MAEF,KAAKxE,IAAI,CAACyE,qBAAV;QACE,OAAOxE,iBAAiB,CAACyE,UAAzB;;MAEF,KAAK1E,IAAI,CAAC2E,4BAAV;MACA,KAAK3E,IAAI,CAAC4E,2BAAV;QACE,OAAO3E,iBAAiB,CAAC4E,YAAzB;;MAEF,KAAK7E,IAAI,CAAC8E,sBAAV;QACE;UACE,IAAIC,UAAU,GAAG3C,SAAS,CAACA,SAAS,CAAClB,MAAV,GAAmB,CAApB,CAA1B;UACA,OAAO6D,UAAU,CAACpD,IAAX,KAAoB3B,IAAI,CAAC2E,4BAAzB,GAAwD1E,iBAAiB,CAAC+E,sBAA1E,GAAmG/E,iBAAiB,CAACgF,mBAA5H;QACD;IApEL;EAsED;AACF"},"metadata":{},"sourceType":"module"}