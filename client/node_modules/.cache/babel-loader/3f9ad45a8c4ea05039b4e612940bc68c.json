{"ast":null,"code":"/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}","map":{"version":3,"names":["getLocation","source","position","lineRegexp","line","column","match","exec","body","index","length"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/language/location.mjs"],"sourcesContent":["/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;EAC5C,IAAIC,UAAU,GAAG,cAAjB;EACA,IAAIC,IAAI,GAAG,CAAX;EACA,IAAIC,MAAM,GAAGH,QAAQ,GAAG,CAAxB;EACA,IAAII,KAAJ;;EAEA,OAAO,CAACA,KAAK,GAAGH,UAAU,CAACI,IAAX,CAAgBN,MAAM,CAACO,IAAvB,CAAT,KAA0CF,KAAK,CAACG,KAAN,GAAcP,QAA/D,EAAyE;IACvEE,IAAI,IAAI,CAAR;IACAC,MAAM,GAAGH,QAAQ,GAAG,CAAX,IAAgBI,KAAK,CAACG,KAAN,GAAcH,KAAK,CAAC,CAAD,CAAL,CAASI,MAAvC,CAAT;EACD;;EAED,OAAO;IACLN,IAAI,EAAEA,IADD;IAELC,MAAM,EAAEA;EAFH,CAAP;AAID"},"metadata":{},"sourceType":"module"}