{"ast":null,"code":"import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}","map":{"version":3,"names":["nodejsCustomInspectSymbol","defineToJSON","classObject","fn","arguments","length","undefined","prototype","toString","toJSON","inspect"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/jsutils/defineToJSON.mjs"],"sourcesContent":["import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,6BAAtC;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,CAAsBC,WAAtB,EAAmC;EAChD,IAAIC,EAAE,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEF,WAAW,CAACK,SAAZ,CAAsBC,QAAnG;EACAN,WAAW,CAACK,SAAZ,CAAsBE,MAAtB,GAA+BN,EAA/B;EACAD,WAAW,CAACK,SAAZ,CAAsBG,OAAtB,GAAgCP,EAAhC;;EAEA,IAAIH,yBAAJ,EAA+B;IAC7BE,WAAW,CAACK,SAAZ,CAAsBP,yBAAtB,IAAmDG,EAAnD;EACD;AACF"},"metadata":{},"sourceType":"module"}