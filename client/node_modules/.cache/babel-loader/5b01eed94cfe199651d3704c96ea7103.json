{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(fieldName, \"\\\" of type \\\"\").concat(typeName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\n\nexport function KnownArgumentNames(context) {\n  return _objectSpread({}, KnownArgumentNamesOnDirectives(context), {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        context.reportError(new GraphQLError(unknownArgMessage(argName, fieldDef.name, parentType.name, suggestionList(argName, knownArgsNames)), argNode));\n      }\n    }\n  });\n} // @internal\n\nexport function KnownArgumentNamesOnDirectives(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveArgs[def.name.value] = def.arguments ? def.arguments.map(function (arg) {\n        return arg.name.value;\n      }) : [];\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(unknownDirectiveArgMessage(argName, directiveName, suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","didYouMean","suggestionList","GraphQLError","Kind","specifiedDirectives","unknownArgMessage","argName","fieldName","typeName","suggestedArgs","concat","map","x","unknownDirectiveArgMessage","directiveName","KnownArgumentNames","context","KnownArgumentNamesOnDirectives","Argument","argNode","argDef","getArgument","fieldDef","getFieldDef","parentType","getParentType","name","knownArgsNames","args","arg","reportError","directiveArgs","create","schema","getSchema","definedDirectives","getDirectives","_i2","directive","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","Directive","directiveNode","knownArgs","_i6","_directiveNode$argume2","indexOf","suggestions"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/validation/rules/KnownArgumentNames.mjs"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(fieldName, \"\\\" of type \\\"\").concat(typeName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\n\nexport function KnownArgumentNames(context) {\n  return _objectSpread({}, KnownArgumentNamesOnDirectives(context), {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        context.reportError(new GraphQLError(unknownArgMessage(argName, fieldDef.name, parentType.name, suggestionList(argName, knownArgsNames)), argNode));\n      }\n    }\n  });\n} // @internal\n\nexport function KnownArgumentNamesOnDirectives(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveArgs[def.name.value] = def.arguments ? def.arguments.map(function (arg) {\n        return arg.name.value;\n      }) : [];\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(unknownDirectiveArgMessage(argName, directiveName, suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}