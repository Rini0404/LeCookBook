{"ast":null,"code":"import flatMap from '../polyfills/flatMap';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport { print } from '../language/printer';\nimport { printBlockString } from '../language/blockString';\nimport { isIntrospectionType } from '../type/introspection';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { astFromValue } from '../utilities/astFromValue';\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\n\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  } // Not reachable. All possible types have been considered.\n\n  /* istanbul ignore next */\n\n\n  invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + \"type \".concat(type.name).concat(implementedInterfaces) + printFields(options, type);\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name) + printFields(options, type);\n}\n\nfunction printUnion(type, options) {\n  var types = type.getTypes();\n  var possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type, options) {\n  var values = type.getValues().map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  });\n  return printDescription(options, type) + \"enum \".concat(type.name) + printBlock(values);\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  });\n  return printDescription(options, type) + \"input \".concat(type.name) + printBlock(fields);\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  });\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var defaultAST = astFromValue(arg.defaultValue, arg.type);\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += \" = \".concat(print(defaultAST));\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  var reason = fieldOrEnumVal.deprecationReason;\n  var reasonAST = astFromValue(reason, GraphQLString);\n\n  if (reasonAST && reason !== '' && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + print(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var text = lines.join('\\n');\n  var preferMultipleLines = text.length > 70;\n  var blockString = printBlockString(text, '', preferMultipleLines);\n  var prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n\n  for (var _i2 = 0; _i2 < lines.length; _i2++) {\n    var line = lines[_i2];\n\n    if (line === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + line + '\\n';\n    }\n  }\n\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var rawLines = description.split('\\n');\n  return flatMap(rawLines, function (line) {\n    if (line.length < maxLen + 5) {\n      return line;\n    } // For > 120 character long lines, cut at space boundaries into sublines\n    // of ~80 chars.\n\n\n    return breakLine(line, maxLen);\n  });\n}\n\nfunction breakLine(line, maxLen) {\n  var parts = line.split(new RegExp(\"((?: |^).{15,\".concat(maxLen - 40, \"}(?= |$))\")));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  var sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}","map":{"version":3,"names":["flatMap","objectValues","inspect","invariant","print","printBlockString","isIntrospectionType","GraphQLString","isSpecifiedScalarType","GraphQLDirective","DEFAULT_DEPRECATION_REASON","isSpecifiedDirective","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","astFromValue","printSchema","schema","options","printFilteredSchema","n","isDefinedType","printIntrospectionSchema","type","directiveFilter","typeFilter","directives","getDirectives","filter","typeMap","getTypeMap","types","sort","type1","type2","name","localeCompare","printSchemaDefinition","concat","map","directive","printDirective","printType","Boolean","join","isSchemaOfCommonNames","operationTypes","queryType","getQueryType","push","mutationType","getMutationType","subscriptionType","getSubscriptionType","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","printDescription","interfaces","getInterfaces","implementedInterfaces","length","i","printFields","getTypes","possibleTypes","values","getValues","value","printDeprecated","printBlock","fields","getFields","f","printInputValue","printArgs","args","String","items","indentation","arguments","undefined","every","arg","description","defaultAST","defaultValue","argDecl","isRepeatable","locations","fieldOrEnumVal","isDeprecated","reason","deprecationReason","reasonAST","def","firstInBlock","lines","descriptionLines","commentDescriptions","printDescriptionWithComments","text","preferMultipleLines","blockString","prefix","replace","_i2","line","maxLen","rawLines","split","breakLine","parts","RegExp","sublines","slice"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/utilities/schemaPrinter.mjs"],"sourcesContent":["import flatMap from '../polyfills/flatMap';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport { print } from '../language/printer';\nimport { printBlockString } from '../language/blockString';\nimport { isIntrospectionType } from '../type/introspection';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { astFromValue } from '../utilities/astFromValue';\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  } // Not reachable. All possible types have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + \"type \".concat(type.name).concat(implementedInterfaces) + printFields(options, type);\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name) + printFields(options, type);\n}\n\nfunction printUnion(type, options) {\n  var types = type.getTypes();\n  var possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type, options) {\n  var values = type.getValues().map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  });\n  return printDescription(options, type) + \"enum \".concat(type.name) + printBlock(values);\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  });\n  return printDescription(options, type) + \"input \".concat(type.name) + printBlock(fields);\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  });\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var defaultAST = astFromValue(arg.defaultValue, arg.type);\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += \" = \".concat(print(defaultAST));\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  var reason = fieldOrEnumVal.deprecationReason;\n  var reasonAST = astFromValue(reason, GraphQLString);\n\n  if (reasonAST && reason !== '' && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + print(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var text = lines.join('\\n');\n  var preferMultipleLines = text.length > 70;\n  var blockString = printBlockString(text, '', preferMultipleLines);\n  var prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n\n  for (var _i2 = 0; _i2 < lines.length; _i2++) {\n    var line = lines[_i2];\n\n    if (line === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + line + '\\n';\n    }\n  }\n\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var rawLines = description.split('\\n');\n  return flatMap(rawLines, function (line) {\n    if (line.length < maxLen + 5) {\n      return line;\n    } // For > 120 character long lines, cut at space boundaries into sublines\n    // of ~80 chars.\n\n\n    return breakLine(line, maxLen);\n  });\n}\n\nfunction breakLine(line, maxLen) {\n  var parts = line.split(new RegExp(\"((?: |^).{15,\".concat(maxLen - 40, \"}(?= |$))\")));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  var sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}