{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isExecutableDefinitionNode } from '../../language/predicates';\nexport function nonExecutableDefinitionMessage(defName) {\n  return \"The \".concat(defName, \" definition is not executable.\");\n}\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n\nexport function ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!isExecutableDefinitionNode(definition)) {\n          context.reportError(new GraphQLError(nonExecutableDefinitionMessage(definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : definition.name.value), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","Kind","isExecutableDefinitionNode","nonExecutableDefinitionMessage","defName","concat","ExecutableDefinitions","context","Document","node","_i2","_node$definitions2","definitions","length","definition","reportError","kind","SCHEMA_DEFINITION","SCHEMA_EXTENSION","name","value"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/validation/rules/ExecutableDefinitions.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isExecutableDefinitionNode } from '../../language/predicates';\nexport function nonExecutableDefinitionMessage(defName) {\n  return \"The \".concat(defName, \" definition is not executable.\");\n}\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n\nexport function ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!isExecutableDefinitionNode(definition)) {\n          context.reportError(new GraphQLError(nonExecutableDefinitionMessage(definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : definition.name.value), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,0BAAT,QAA2C,2BAA3C;AACA,OAAO,SAASC,8BAAT,CAAwCC,OAAxC,EAAiD;EACtD,OAAO,OAAOC,MAAP,CAAcD,OAAd,EAAuB,gCAAvB,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,qBAAT,CAA+BC,OAA/B,EAAwC;EAC7C,OAAO;IACLC,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;MAChC,KAAK,IAAIC,GAAG,GAAG,CAAV,EAAaC,kBAAkB,GAAGF,IAAI,CAACG,WAA5C,EAAyDF,GAAG,GAAGC,kBAAkB,CAACE,MAAlF,EAA0FH,GAAG,EAA7F,EAAiG;QAC/F,IAAII,UAAU,GAAGH,kBAAkB,CAACD,GAAD,CAAnC;;QAEA,IAAI,CAACR,0BAA0B,CAACY,UAAD,CAA/B,EAA6C;UAC3CP,OAAO,CAACQ,WAAR,CAAoB,IAAIf,YAAJ,CAAiBG,8BAA8B,CAACW,UAAU,CAACE,IAAX,KAAoBf,IAAI,CAACgB,iBAAzB,IAA8CH,UAAU,CAACE,IAAX,KAAoBf,IAAI,CAACiB,gBAAvE,GAA0F,QAA1F,GAAqGJ,UAAU,CAACK,IAAX,CAAgBC,KAAtH,CAA/C,EAA6KN,UAA7K,CAApB;QACD;MACF;;MAED,OAAO,KAAP;IACD;EAXI,CAAP;AAaD"},"metadata":{},"sourceType":"module"}