{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RiniPeni\\\\Documents\\\\Developer\\\\ReactApps\\\\LeCookBook\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu() {\n  _s();\n\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"dVCQPHAWx2znearw0XIiXyA+Ei0=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n\n_c = CategoryMenu;\nexport default CategoryMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","CategoryMenu","state","dispatch","categories","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SACEC,iBADF,EAEEC,uBAFF,QAGO,qBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,eAAe,EAAzC;EAEA,MAAM;IAAEQ;EAAF,IAAiBF,KAAvB;EAEA,MAAM;IAAEG,OAAF;IAAWC,IAAI,EAAEC;EAAjB,IAAkCZ,QAAQ,CAACI,gBAAD,CAAhD;EAEAL,SAAS,CAAC,MAAM;IACd,IAAIa,YAAJ,EAAkB;MAChBJ,QAAQ,CAAC;QACPK,IAAI,EAAEX,iBADC;QAEPO,UAAU,EAAEG,YAAY,CAACH;MAFlB,CAAD,CAAR;MAIAG,YAAY,CAACH,UAAb,CAAwBK,OAAxB,CAAiCC,QAAD,IAAc;QAC5CV,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBU,QAAtB,CAAV;MACD,CAFD;IAGD,CARD,MAQO,IAAI,CAACL,OAAL,EAAc;MACnBL,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCW,IAAhC,CAAsCP,UAAD,IAAgB;QACnDD,QAAQ,CAAC;UACPK,IAAI,EAAEX,iBADC;UAEPO,UAAU,EAAEA;QAFL,CAAD,CAAR;MAID,CALD;IAMD;EACF,CAjBQ,EAiBN,CAACG,YAAD,EAAeF,OAAf,EAAwBF,QAAxB,CAjBM,CAAT;;EAmBA,MAAMS,WAAW,GAAIC,EAAD,IAAQ;IAC1BV,QAAQ,CAAC;MACPK,IAAI,EAAEV,uBADC;MAEPgB,eAAe,EAAED;IAFV,CAAD,CAAR;EAID,CALD;;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGT,UAAU,CAACW,GAAX,CAAgBC,IAAD,iBACd;MAEE,OAAO,EAAE,MAAM;QACbJ,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;MACD,CAJH;MAAA,UAMGD,IAAI,CAACE;IANR,GACOF,IAAI,CAACC,GADZ;MAAA;MAAA;MAAA;IAAA,QADD,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAhDQhB,Y;UACmBL,e,EAIcD,Q;;;KALjCM,Y;AAkDT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}