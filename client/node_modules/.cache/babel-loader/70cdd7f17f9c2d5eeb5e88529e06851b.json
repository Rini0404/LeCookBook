{"ast":null,"code":"import inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { getNamedType, isLeafType } from '../../type/definition';\nexport function noSubselectionAllowedMessage(fieldName, type) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" must not have a selection since type \\\"\").concat(type, \"\\\" has no subfields.\");\n}\nexport function requiredSubselectionMessage(fieldName, type) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" of type \\\"\").concat(type, \"\\\" must have a selection of subfields. Did you mean \\\"\").concat(fieldName, \" { ... }\\\"?\");\n}\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\n\nexport function ScalarLeafs(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            context.reportError(new GraphQLError(noSubselectionAllowedMessage(node.name.value, inspect(type)), selectionSet));\n          }\n        } else if (!selectionSet) {\n          context.reportError(new GraphQLError(requiredSubselectionMessage(node.name.value, inspect(type)), node));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["inspect","GraphQLError","getNamedType","isLeafType","noSubselectionAllowedMessage","fieldName","type","concat","requiredSubselectionMessage","ScalarLeafs","context","Field","node","getType","selectionSet","reportError","name","value"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/validation/rules/ScalarLeafs.mjs"],"sourcesContent":["import inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { getNamedType, isLeafType } from '../../type/definition';\nexport function noSubselectionAllowedMessage(fieldName, type) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" must not have a selection since type \\\"\").concat(type, \"\\\" has no subfields.\");\n}\nexport function requiredSubselectionMessage(fieldName, type) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" of type \\\"\").concat(type, \"\\\" must have a selection of subfields. Did you mean \\\"\").concat(fieldName, \" { ... }\\\"?\");\n}\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\n\nexport function ScalarLeafs(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            context.reportError(new GraphQLError(noSubselectionAllowedMessage(node.name.value, inspect(type)), selectionSet));\n          }\n        } else if (!selectionSet) {\n          context.reportError(new GraphQLError(requiredSubselectionMessage(node.name.value, inspect(type)), node));\n        }\n      }\n    }\n  };\n}\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,uBAAzC;AACA,OAAO,SAASC,4BAAT,CAAsCC,SAAtC,EAAiDC,IAAjD,EAAuD;EAC5D,OAAO,WAAWC,MAAX,CAAkBF,SAAlB,EAA6B,4CAA7B,EAA2EE,MAA3E,CAAkFD,IAAlF,EAAwF,sBAAxF,CAAP;AACD;AACD,OAAO,SAASE,2BAAT,CAAqCH,SAArC,EAAgDC,IAAhD,EAAsD;EAC3D,OAAO,WAAWC,MAAX,CAAkBF,SAAlB,EAA6B,eAA7B,EAA8CE,MAA9C,CAAqDD,IAArD,EAA2D,wDAA3D,EAAqHC,MAArH,CAA4HF,SAA5H,EAAuI,aAAvI,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASI,WAAT,CAAqBC,OAArB,EAA8B;EACnC,OAAO;IACLC,KAAK,EAAE,SAASA,KAAT,CAAeC,IAAf,EAAqB;MAC1B,IAAIN,IAAI,GAAGI,OAAO,CAACG,OAAR,EAAX;MACA,IAAIC,YAAY,GAAGF,IAAI,CAACE,YAAxB;;MAEA,IAAIR,IAAJ,EAAU;QACR,IAAIH,UAAU,CAACD,YAAY,CAACI,IAAD,CAAb,CAAd,EAAoC;UAClC,IAAIQ,YAAJ,EAAkB;YAChBJ,OAAO,CAACK,WAAR,CAAoB,IAAId,YAAJ,CAAiBG,4BAA4B,CAACQ,IAAI,CAACI,IAAL,CAAUC,KAAX,EAAkBjB,OAAO,CAACM,IAAD,CAAzB,CAA7C,EAA+EQ,YAA/E,CAApB;UACD;QACF,CAJD,MAIO,IAAI,CAACA,YAAL,EAAmB;UACxBJ,OAAO,CAACK,WAAR,CAAoB,IAAId,YAAJ,CAAiBO,2BAA2B,CAACI,IAAI,CAACI,IAAL,CAAUC,KAAX,EAAkBjB,OAAO,CAACM,IAAD,CAAzB,CAA5C,EAA8EM,IAA9E,CAApB;QACD;MACF;IACF;EAdI,CAAP;AAgBD"},"metadata":{},"sourceType":"module"}