{"ast":null,"code":"/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key) {\n  return {\n    prev: prev,\n    key: key\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  var flattened = [];\n  var curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}","map":{"version":3,"names":["addPath","prev","key","pathToArray","path","flattened","curr","push","reverse"],"sources":["C:/Users/RiniPeni/Documents/Developer/ReactApps/LeCookBook/client/node_modules/graphql/jsutils/Path.mjs"],"sourcesContent":["/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key) {\n  return {\n    prev: prev,\n    key: key\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  var flattened = [];\n  var curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,GAAvB,EAA4B;EACjC,OAAO;IACLD,IAAI,EAAEA,IADD;IAELC,GAAG,EAAEA;EAFA,CAAP;AAID;AACD;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EAChC,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,IAAI,GAAGF,IAAX;;EAEA,OAAOE,IAAP,EAAa;IACXD,SAAS,CAACE,IAAV,CAAeD,IAAI,CAACJ,GAApB;IACAI,IAAI,GAAGA,IAAI,CAACL,IAAZ;EACD;;EAED,OAAOI,SAAS,CAACG,OAAV,EAAP;AACD"},"metadata":{},"sourceType":"module"}